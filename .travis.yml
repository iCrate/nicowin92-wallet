language: node_js
node_js: 12
mono:
  - latest

jobs:
  include:
    - os: linux
      dist: bionic
    - os: osx
      osx_image: xcode10

env:
  global:
    - secure: "oo2NK1h2Ir+NbYMraVzHOjIHtJyP2DThCLAR9sCcD+sWRI6HWhmlncDDaRG2Pj2HyYUCOMayYKXkVjNIxtvOT27IOdqg3iXVrSGqSJllIRS8J1dv2dJhlfNqgJUtp+Z+kK1dpQB2CrXOPCw2NJCb+bkvmCB+2loYrV1j+HBvMJhS7gbcEBvLU7khXAFAVkpCX6SbF/7hRjERvWEUXZ7a99G2ElY+7VBeUf5b53hJSuoOFQ29S3JN2PEsOc0MCJt6lSmKErFru3ahgsiP0i5mUDdsAqclGfON0MyksQzYxtjs5Y5Lt3JhQf+7UI0WnN9Y/WKHV+iqdJQ3exbeNi+vwWaSRht3zqxJySZV9riK1lbh49F7ebd5ZldbnIbq2AqI8siLPtFV8ryiqIIkfY/qsCV5DsBu9JWgl3f16NuTpqzPZFF2hCDJ4+m+LM72QOTWH6lfkQTVO2zSH4eGaHd/smzqbZbLf04jSmry+vz9tl5wXevTtXhzFnvK8vwdeISUapDuadMoMsLc87ICdeL0fSMpKgFwz9sBs+a9FGvrSSEM7Kuqd6Tldv2rKZuHFo2J578mwORscMgYXrQgs4YnVzsOTyNIxvaMGAZ4VSysqoq8EZl6iJL4ZWf8aRhYLc8Ab6EwMUsi41Egqpp0xbfUW8oDNsUJDpumeCXHhOwofek="
    - CSC_IDENTITY_AUTO_DISCOVERY=false
    - YARN_GPG=no # otherwise Yarn starts a GPG daemon which prevents builds from finishing on Windows

cache:
  yarn: true
  directories:
    - "node_modules"
    - "packages/core/node_modules"
    - "packages/desktop/node_modules"
    - "packages/erc20/node_modules"
    - "packages/services/node_modules"
    - "packages/ui/node_modules"

# Need for gitversion
git:
  depth: false

before_install:
  # GitVersion
  - echo Installing GitVersion...
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install mono; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt install curl; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then export GITVERSION_NAME="gitversion-ubuntu.18.04-x64-5.3.3.tar.gz"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export GITVERSION_NAME="gitversion-osx-x64-5.3.3.tar.gz"; fi

  # wget https://github.com/GitTools/GitVersion/releases/download/v4.0.0/GitVersion-bin-net40-v4.0.0.zip
  - wget https://github.com/GitTools/GitVersion/releases/download/5.3.3/$GITVERSION_NAME
  # unzip GitVersion-bin-net40-v4.0.0.zip -d GitVersionBin
  - mkdir GitVersionBin
  - tar -zxvf $GITVERSION_NAME -C GitVersionBin
  - echo "#!/bin/bash" > gitversion
  - echo 'GitVersionBin/gitversion "$@"' >> gitversion
  - chmod 755 gitversion
  - ./gitversion /version
  # Janus
  - echo Janus...
  - curl -sL https://raw.githubusercontent.com/ETCDEVTeam/janus/master/get.sh | bash
  - export PATH=$PATH:$PWD/janusbin
  # Warm up Yarn
  - echo Installing dependencies
  - npm install -g node-gyp license-checker
  - npm install -g codecov yarn lerna
  - npm install -g typescript

install:
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - yarn install

before_script:
  - tsc -V
  - ./gitversion

script:
  - ./gitversion > packages/desktop/gitversion.json
  - export APP_VERSION_GIT_TAG="$(./gitversion /showvariable FullSemVer)-$(./gitversion /showvariable ShortSha)"
  - echo "Building app version $APP_VERSION_GIT_TAG"
  - if [[ $(license-checker --production --exclude '(GPL-2.0 OR MIT)' | grep GPL) ]]; then license-checker --production | grep -C 1 GPL && false; fi
  - yarn build
  - yarn test:coverage
  # - yarn lint:ts
  - travis_wait 30 yarn build:dist
after_success:
  # Show dist directory contents after a successful build.
  - ls -l ./packages/desktop/dist/
  # Set up GCP deployment
  - openssl aes-256-cbc -k "$GCP_PASSWD" -in gcloud-travis.json.enc -out .gcloud.json -d

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-4.8
    - build-essential
    - libudev-dev
    - libusb-1.0-0
    - libusb-1.0-0-dev
    - mono-complete
    - libcurl3
    - xvfb
deploy:
  - provider: script
    script: ./gcloud-deploy.sh
    skip_cleanup: true
    on:
      branch: master

  - provider: script
    script: ./gcloud-deploy.sh
    skip_cleanup: true
    on:
      tags: true
